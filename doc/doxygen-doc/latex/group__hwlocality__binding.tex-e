\hypertarget{group__hwlocality__binding}{
\section{Binding}
\label{group__hwlocality__binding}\index{Binding@{Binding}}
}
\subsection*{Enumerations}
\begin{DoxyCompactItemize}
\item 
enum \hyperlink{group__hwlocality__binding_ga9b2de9a34a18edb39fb272adf9c33622}{hwloc\_\-cpubind\_\-policy\_\-t} \{ \hyperlink{group__hwlocality__binding_gga9b2de9a34a18edb39fb272adf9c33622a2e0dd0128dac6b03408c7dd170477fdc}{HWLOC\_\-CPUBIND\_\-PROCESS} =  (1$<$$<$0), 
\hyperlink{group__hwlocality__binding_gga9b2de9a34a18edb39fb272adf9c33622af1b6bbad00d7b1017b918e3719f4d421}{HWLOC\_\-CPUBIND\_\-THREAD} =  (1$<$$<$1), 
\hyperlink{group__hwlocality__binding_gga9b2de9a34a18edb39fb272adf9c33622a679a7e0f0c7ee06b123565f90d98e7fa}{HWLOC\_\-CPUBIND\_\-STRICT} =  (1$<$$<$2)
 \}
\begin{DoxyCompactList}\small\item\em Process/Thread binding policy. \item\end{DoxyCompactList}\end{DoxyCompactItemize}
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
int \hyperlink{group__hwlocality__binding_ga47053da286384d86ec3e4fb3fe148dae}{hwloc\_\-set\_\-cpubind} (\hyperlink{group__hwlocality__topology_ga9d1e76ee15a7dee158b786c30b6a6e38}{hwloc\_\-topology\_\-t} topology, const \hyperlink{group__hwlocality__cpuset_ga7366332f7090f5b54d4b25a0c2c4b411}{hwloc\_\-cpuset\_\-t} set, int policy)
\begin{DoxyCompactList}\small\item\em Bind current process or thread on cpus given in cpuset {\ttfamily set}. \item\end{DoxyCompactList}\item 
int \hyperlink{group__hwlocality__binding_ga27f372f8d5fd8c9844318b492b316dfb}{hwloc\_\-set\_\-proc\_\-cpubind} (\hyperlink{group__hwlocality__topology_ga9d1e76ee15a7dee158b786c30b6a6e38}{hwloc\_\-topology\_\-t} topology, hwloc\_\-pid\_\-t pid, const \hyperlink{group__hwlocality__cpuset_ga7366332f7090f5b54d4b25a0c2c4b411}{hwloc\_\-cpuset\_\-t} set, int policy)
\begin{DoxyCompactList}\small\item\em Bind a process {\ttfamily pid} on cpus given in cpuset {\ttfamily set}. \item\end{DoxyCompactList}\item 
int \hyperlink{group__hwlocality__binding_gadba2db76b9359d39c33bac86f2fb77b4}{hwloc\_\-set\_\-thread\_\-cpubind} (\hyperlink{group__hwlocality__topology_ga9d1e76ee15a7dee158b786c30b6a6e38}{hwloc\_\-topology\_\-t} topology, hwloc\_\-thread\_\-t tid, const \hyperlink{group__hwlocality__cpuset_ga7366332f7090f5b54d4b25a0c2c4b411}{hwloc\_\-cpuset\_\-t} set, int policy)
\begin{DoxyCompactList}\small\item\em Bind a thread {\ttfamily tid} on cpus given in cpuset {\ttfamily set}. \item\end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
It is often useful to call \hyperlink{group__hwlocality__cpuset_ga548a6620cce008fc5b1e2110d25135fe}{hwloc\_\-cpuset\_\-singlify()} first so that a single CPU remains in the set. This way, the process will not even migrate between different CPUs. Some OSes also only support that kind of binding.

\begin{DoxyNote}{Note}
Some OSes do not provide all ways to bind processes, threads, etc and the corresponding binding functions may fail. ENOSYS is returned when it is not possible to bind the requested kind of object processes/threads). EXDEV is returned when the requested cpuset can not be enforced (e.g. some systems only allow one CPU, and some other systems only allow one NUMA node)
\end{DoxyNote}
The most portable version that should be preferred over the others, whenever possible, is


\begin{DoxyCode}
 hwloc_set_cpubind(topology, set, 0),
\end{DoxyCode}


as it just binds the current program, assuming it is monothread, or


\begin{DoxyCode}
 hwloc_set_cpubind(topology, set, HWLOC_CPUBIND_THREAD),
\end{DoxyCode}


which binds the current thread of the current program (which may be multithreaded).

\begin{DoxyNote}{Note}
To unbind, just call the binding function with either a full cpuset or a cpuset equal to the system cpuset. 
\end{DoxyNote}


\subsection{Enumeration Type Documentation}
\hypertarget{group__hwlocality__binding_ga9b2de9a34a18edb39fb272adf9c33622}{
\index{hwlocality\_\-binding@{hwlocality\_\-binding}!hwloc\_\-cpubind\_\-policy\_\-t@{hwloc\_\-cpubind\_\-policy\_\-t}}
\index{hwloc\_\-cpubind\_\-policy\_\-t@{hwloc\_\-cpubind\_\-policy\_\-t}!hwlocality_binding@{hwlocality\_\-binding}}
\subsubsection[{hwloc\_\-cpubind\_\-policy\_\-t}]{\setlength{\rightskip}{0pt plus 5cm}enum {\bf hwloc\_\-cpubind\_\-policy\_\-t}}}
\label{group__hwlocality__binding_ga9b2de9a34a18edb39fb272adf9c33622}


Process/Thread binding policy. These flags can be used to refine the binding policy.

The default (0) is to bind the current process, assumed to be mono-\/thread, in a non-\/strict way. This is the most portable way to bind as all OSes usually provide it. \begin{Desc}
\item[Enumerator: ]\par
\begin{description}
\index{HWLOC\_\-CPUBIND\_\-PROCESS@{HWLOC\_\-CPUBIND\_\-PROCESS}!hwlocality\_\-binding@{hwlocality\_\-binding}}\index{hwlocality\_\-binding@{hwlocality\_\-binding}!HWLOC\_\-CPUBIND\_\-PROCESS@{HWLOC\_\-CPUBIND\_\-PROCESS}}\item[{\em 
\hypertarget{group__hwlocality__binding_gga9b2de9a34a18edb39fb272adf9c33622a2e0dd0128dac6b03408c7dd170477fdc}{
HWLOC\_\-CPUBIND\_\-PROCESS}
\label{group__hwlocality__binding_gga9b2de9a34a18edb39fb272adf9c33622a2e0dd0128dac6b03408c7dd170477fdc}
}]Bind all threads of the current multithreaded process. This may not be supported by some OSes (e.g. Linux). \index{HWLOC\_\-CPUBIND\_\-THREAD@{HWLOC\_\-CPUBIND\_\-THREAD}!hwlocality\_\-binding@{hwlocality\_\-binding}}\index{hwlocality\_\-binding@{hwlocality\_\-binding}!HWLOC\_\-CPUBIND\_\-THREAD@{HWLOC\_\-CPUBIND\_\-THREAD}}\item[{\em 
\hypertarget{group__hwlocality__binding_gga9b2de9a34a18edb39fb272adf9c33622af1b6bbad00d7b1017b918e3719f4d421}{
HWLOC\_\-CPUBIND\_\-THREAD}
\label{group__hwlocality__binding_gga9b2de9a34a18edb39fb272adf9c33622af1b6bbad00d7b1017b918e3719f4d421}
}]Bind current thread of current process. \index{HWLOC\_\-CPUBIND\_\-STRICT@{HWLOC\_\-CPUBIND\_\-STRICT}!hwlocality\_\-binding@{hwlocality\_\-binding}}\index{hwlocality\_\-binding@{hwlocality\_\-binding}!HWLOC\_\-CPUBIND\_\-STRICT@{HWLOC\_\-CPUBIND\_\-STRICT}}\item[{\em 
\hypertarget{group__hwlocality__binding_gga9b2de9a34a18edb39fb272adf9c33622a679a7e0f0c7ee06b123565f90d98e7fa}{
HWLOC\_\-CPUBIND\_\-STRICT}
\label{group__hwlocality__binding_gga9b2de9a34a18edb39fb272adf9c33622a679a7e0f0c7ee06b123565f90d98e7fa}
}]Request for strict binding from the OS. By default, when the designated CPUs are all busy while other CPUs are idle, OSes may execute the thread/process on those other CPUs instead of the designated CPUs, to let them progress anyway. Strict binding means that the thread/process will \_\-never\_\- execute on other cpus than the designated CPUs, even when those are busy with other tasks and other CPUs are idle.

\begin{DoxyNote}{Note}
Depending on OSes and implementations, strict binding may not be possible (implementation reason) or not allowed (administrative reasons), and the function will fail in that case. 
\end{DoxyNote}
\end{description}
\end{Desc}



\subsection{Function Documentation}
\hypertarget{group__hwlocality__binding_ga47053da286384d86ec3e4fb3fe148dae}{
\index{hwlocality\_\-binding@{hwlocality\_\-binding}!hwloc\_\-set\_\-cpubind@{hwloc\_\-set\_\-cpubind}}
\index{hwloc\_\-set\_\-cpubind@{hwloc\_\-set\_\-cpubind}!hwlocality_binding@{hwlocality\_\-binding}}
\subsubsection[{hwloc\_\-set\_\-cpubind}]{\setlength{\rightskip}{0pt plus 5cm}int hwloc\_\-set\_\-cpubind ({\bf hwloc\_\-topology\_\-t} {\em topology}, \/  const {\bf hwloc\_\-cpuset\_\-t} {\em set}, \/  int {\em policy})}}
\label{group__hwlocality__binding_ga47053da286384d86ec3e4fb3fe148dae}


Bind current process or thread on cpus given in cpuset {\ttfamily set}. \hypertarget{group__hwlocality__binding_ga27f372f8d5fd8c9844318b492b316dfb}{
\index{hwlocality\_\-binding@{hwlocality\_\-binding}!hwloc\_\-set\_\-proc\_\-cpubind@{hwloc\_\-set\_\-proc\_\-cpubind}}
\index{hwloc\_\-set\_\-proc\_\-cpubind@{hwloc\_\-set\_\-proc\_\-cpubind}!hwlocality_binding@{hwlocality\_\-binding}}
\subsubsection[{hwloc\_\-set\_\-proc\_\-cpubind}]{\setlength{\rightskip}{0pt plus 5cm}int hwloc\_\-set\_\-proc\_\-cpubind ({\bf hwloc\_\-topology\_\-t} {\em topology}, \/  hwloc\_\-pid\_\-t {\em pid}, \/  const {\bf hwloc\_\-cpuset\_\-t} {\em set}, \/  int {\em policy})}}
\label{group__hwlocality__binding_ga27f372f8d5fd8c9844318b492b316dfb}


Bind a process {\ttfamily pid} on cpus given in cpuset {\ttfamily set}. \begin{DoxyNote}{Note}
hwloc\_\-pid\_\-t is pid\_\-t on unix platforms, and HANDLE on native Windows platforms

HWLOC\_\-CPUBIND\_\-THREAD can not be used in {\ttfamily policy}. 
\end{DoxyNote}
\hypertarget{group__hwlocality__binding_gadba2db76b9359d39c33bac86f2fb77b4}{
\index{hwlocality\_\-binding@{hwlocality\_\-binding}!hwloc\_\-set\_\-thread\_\-cpubind@{hwloc\_\-set\_\-thread\_\-cpubind}}
\index{hwloc\_\-set\_\-thread\_\-cpubind@{hwloc\_\-set\_\-thread\_\-cpubind}!hwlocality_binding@{hwlocality\_\-binding}}
\subsubsection[{hwloc\_\-set\_\-thread\_\-cpubind}]{\setlength{\rightskip}{0pt plus 5cm}int hwloc\_\-set\_\-thread\_\-cpubind ({\bf hwloc\_\-topology\_\-t} {\em topology}, \/  hwloc\_\-thread\_\-t {\em tid}, \/  const {\bf hwloc\_\-cpuset\_\-t} {\em set}, \/  int {\em policy})}}
\label{group__hwlocality__binding_gadba2db76b9359d39c33bac86f2fb77b4}


Bind a thread {\ttfamily tid} on cpus given in cpuset {\ttfamily set}. \begin{DoxyNote}{Note}
hwloc\_\-thread\_\-t is pthread\_\-t on unix platforms, and HANDLE on native Windows platforms

HWLOC\_\-CPUBIND\_\-PROCESS can not be used in {\ttfamily policy}. 
\end{DoxyNote}
