.TH "Object/String Conversion" 3 "Mon Feb 27 2012" "Version 1.4.1" "Hardware Locality (hwloc)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Object/String Conversion \- 
.SS "Functions"

.in +1c
.ti -1c
.RI " const char * \fBhwloc_obj_type_string\fP (\fBhwloc_obj_type_t\fP type) "
.br
.ti -1c
.RI " \fBhwloc_obj_type_t\fP \fBhwloc_obj_type_of_string\fP (const char *string) "
.br
.ti -1c
.RI " int \fBhwloc_obj_type_snprintf\fP (char *restrict string, size_t size, \fBhwloc_obj_t\fP obj, int verbose)"
.br
.ti -1c
.RI " int \fBhwloc_obj_attr_snprintf\fP (char *restrict string, size_t size, \fBhwloc_obj_t\fP obj, const char *restrict separator, int verbose)"
.br
.ti -1c
.RI " int \fBhwloc_obj_snprintf\fP (char *restrict string, size_t size, \fBhwloc_topology_t\fP topology, \fBhwloc_obj_t\fP obj, const char *restrict indexprefix, int verbose)"
.br
.ti -1c
.RI " int \fBhwloc_obj_cpuset_snprintf\fP (char *restrict str, size_t size, size_t nobj, const \fBhwloc_obj_t\fP *restrict objs)"
.br
.ti -1c
.RI "static inline const char * \fBhwloc_obj_get_info_by_name\fP (\fBhwloc_obj_t\fP obj, const char *name) "
.br
.ti -1c
.RI " void \fBhwloc_obj_add_info\fP (\fBhwloc_obj_t\fP obj, const char *name, const char *value)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS " void \fBhwloc_obj_add_info\fP (\fBhwloc_obj_t\fPobj, const char *name, const char *value)"
.PP
Add the given info name and value pair to the given object\&. The info is appended to the existing info array even if another key with the same name already exists\&.
.PP
The input strings are copied before being added in the object infos\&. 
.SS " int \fBhwloc_obj_attr_snprintf\fP (char *restrictstring, size_tsize, \fBhwloc_obj_t\fPobj, const char *restrictseparator, intverbose)"
.PP
Stringify the attributes of a given topology object into a human-readable form\&. Attribute values are separated by \fCseparator\fP\&.
.PP
Only the major attributes are printed in non-verbose mode\&.
.PP
If \fCsize\fP is 0, \fCstring\fP may safely be \fCNULL\fP\&.
.PP
\fBReturns:\fP
.RS 4
the number of character that were actually written if not truncating, or that would have been written (not including the ending \\0)\&. 
.RE
.PP

.SS " int \fBhwloc_obj_cpuset_snprintf\fP (char *restrictstr, size_tsize, size_tnobj, const \fBhwloc_obj_t\fP *restrictobjs)"
.PP
Stringify the cpuset containing a set of objects\&. If \fCsize\fP is 0, \fCstring\fP may safely be \fCNULL\fP\&.
.PP
\fBReturns:\fP
.RS 4
the number of character that were actually written if not truncating, or that would have been written (not including the ending \\0)\&. 
.RE
.PP

.SS "static inline const char * \fBhwloc_obj_get_info_by_name\fP (\fBhwloc_obj_t\fPobj, const char *name)\fC [static]\fP"
.PP
Search the given key name in object infos and return the corresponding value\&. If multiple keys match the given name, only the first one is returned\&.
.PP
\fBReturns:\fP
.RS 4
\fCNULL\fP if no such key exists\&. 
.RE
.PP

.SS " int \fBhwloc_obj_snprintf\fP (char *restrictstring, size_tsize, \fBhwloc_topology_t\fPtopology, \fBhwloc_obj_t\fPobj, const char *restrictindexprefix, intverbose)"
.PP
Stringify a given topology object into a human-readable form\&. \fBNote:\fP
.RS 4
This function is deprecated in favor of \fBhwloc_obj_type_snprintf()\fP and \fBhwloc_obj_attr_snprintf()\fP since it is not very flexible and only prints physical/OS indexes\&.
.RE
.PP
Fill string \fCstring\fP up to \fCsize\fP characters with the description of topology object \fCobj\fP in topology \fCtopology\fP\&.
.PP
If \fCverbose\fP is set, a longer description is used\&. Otherwise a short description is used\&.
.PP
\fCindexprefix\fP is used to prefix the \fCos_index\fP attribute number of the object in the description\&. If \fCNULL\fP, the \fC#\fP character is used\&.
.PP
If \fCsize\fP is 0, \fCstring\fP may safely be \fCNULL\fP\&.
.PP
\fBReturns:\fP
.RS 4
the number of character that were actually written if not truncating, or that would have been written (not including the ending \\0)\&. 
.RE
.PP

.SS " \fBhwloc_obj_type_t\fP \fBhwloc_obj_type_of_string\fP (const char *string)"
.PP
Return an object type from the string\&. \fBReturns:\fP
.RS 4
-1 if unrecognized\&. 
.RE
.PP

.SS " int \fBhwloc_obj_type_snprintf\fP (char *restrictstring, size_tsize, \fBhwloc_obj_t\fPobj, intverbose)"
.PP
Stringify the type of a given topology object into a human-readable form\&. It differs from \fBhwloc_obj_type_string()\fP because it prints type attributes such as cache depth\&.
.PP
If \fCsize\fP is 0, \fCstring\fP may safely be \fCNULL\fP\&.
.PP
\fBReturns:\fP
.RS 4
the number of character that were actually written if not truncating, or that would have been written (not including the ending \\0)\&. 
.RE
.PP

.SS " const char* \fBhwloc_obj_type_string\fP (\fBhwloc_obj_type_t\fPtype) const"
.PP
Return a stringified topology object type\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Hardware Locality (hwloc) from the source code\&.
