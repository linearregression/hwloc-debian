.TH "Get Some Topology Information" 3 "Mon Feb 27 2012" "Version 1.4.1" "Hardware Locality (hwloc)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Get Some Topology Information \- 
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBhwloc_get_type_depth_e\fP { \fBHWLOC_TYPE_DEPTH_UNKNOWN\fP, \fBHWLOC_TYPE_DEPTH_MULTIPLE\fP, \fBHWLOC_TYPE_DEPTH_BRIDGE\fP, \fBHWLOC_TYPE_DEPTH_PCI_DEVICE\fP, \fBHWLOC_TYPE_DEPTH_OS_DEVICE\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI " unsigned \fBhwloc_topology_get_depth\fP (\fBhwloc_topology_t\fP restrict topology) "
.br
.ti -1c
.RI " int \fBhwloc_get_type_depth\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type)"
.br
.ti -1c
.RI " \fBhwloc_obj_type_t\fP \fBhwloc_get_depth_type\fP (\fBhwloc_topology_t\fP topology, unsigned depth) "
.br
.ti -1c
.RI " unsigned \fBhwloc_get_nbobjs_by_depth\fP (\fBhwloc_topology_t\fP topology, unsigned depth) "
.br
.ti -1c
.RI "static inline int \fBhwloc_get_nbobjs_by_type\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type) "
.br
.ti -1c
.RI " int \fBhwloc_topology_is_thissystem\fP (\fBhwloc_topology_t\fP restrict topology) "
.br
.in -1c
.SH "Detailed Description"
.PP 
Be sure to see the figure in \fBTerms and Definitions\fP that shows a complete topology tree, including depths, child/sibling/cousin relationships, and an example of an asymmetric topology where one socket has fewer caches than its peers\&. 
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBhwloc_get_type_depth_e\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIHWLOC_TYPE_DEPTH_UNKNOWN \fP\fP
No object of given type exists in the topology\&. 
.TP
\fB\fIHWLOC_TYPE_DEPTH_MULTIPLE \fP\fP
Objects of given type exist at different depth in the topology\&. 
.TP
\fB\fIHWLOC_TYPE_DEPTH_BRIDGE \fP\fP
Virtual depth for bridge object level\&. 
.TP
\fB\fIHWLOC_TYPE_DEPTH_PCI_DEVICE \fP\fP
Virtual depth for PCI device object level\&. 
.TP
\fB\fIHWLOC_TYPE_DEPTH_OS_DEVICE \fP\fP
Virtual depth for software device object level\&. 
.SH "Function Documentation"
.PP 
.SS " \fBhwloc_obj_type_t\fP \fBhwloc_get_depth_type\fP (\fBhwloc_topology_t\fPtopology, unsigneddepth)"
.PP
Returns the type of objects at depth \fCdepth\fP\&. \fBReturns:\fP
.RS 4
-1 if depth \fCdepth\fP does not exist\&. 
.RE
.PP

.SS " unsigned \fBhwloc_get_nbobjs_by_depth\fP (\fBhwloc_topology_t\fPtopology, unsigneddepth)"
.PP
Returns the width of level at depth \fCdepth\fP\&. 
.SS "static inline int \fBhwloc_get_nbobjs_by_type\fP (\fBhwloc_topology_t\fPtopology, \fBhwloc_obj_type_t\fPtype)\fC [static]\fP"
.PP
Returns the width of level type \fCtype\fP\&. If no object for that type exists, 0 is returned\&. If there are several levels with objects of that type, -1 is returned\&. 
.SS " int \fBhwloc_get_type_depth\fP (\fBhwloc_topology_t\fPtopology, \fBhwloc_obj_type_t\fPtype)"
.PP
Returns the depth of objects of type \fCtype\fP\&. If no object of this type is present on the underlying architecture, or if the OS doesn't provide this kind of information, the function returns HWLOC_TYPE_DEPTH_UNKNOWN\&.
.PP
If type is absent but a similar type is acceptable, see also \fBhwloc_get_type_or_below_depth()\fP and \fBhwloc_get_type_or_above_depth()\fP\&.
.PP
If some objects of the given type exist in different levels, for instance L1 and L2 caches, the function returns HWLOC_TYPE_DEPTH_MULTIPLE\&.
.PP
If an I/O object type is given, the function returns a virtual value because I/O objects are stored in special levels that are not CPU-related\&. This virtual depth may be passed to other hwloc functions such as \fBhwloc_get_obj_by_depth()\fP but it should not be considered as an actual depth by the application\&. In particular, it should not be compared with any other object depth or with the entire topology depth\&. 
.SS " unsigned \fBhwloc_topology_get_depth\fP (\fBhwloc_topology_t\fP restricttopology)"
.PP
Get the depth of the hierarchical tree of objects\&. This is the depth of HWLOC_OBJ_PU objects plus one\&. 
.SS " int \fBhwloc_topology_is_thissystem\fP (\fBhwloc_topology_t\fP restricttopology)"
.PP
Does the topology context come from this system? \fBReturns:\fP
.RS 4
1 if this topology context was built using the system running this program\&. 
.PP
0 instead (for instance if using another file-system root, a XML topology file, or a synthetic topology)\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Hardware Locality (hwloc) from the source code\&.
