.TH "OpenFabrics-Specific Functions" 3 "Mon Jul 30 2012" "Version 1.5" "Hardware Locality (hwloc)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
OpenFabrics-Specific Functions \- 
.SS "Functions"

.in +1c
.ti -1c
.RI "static inline int \fBhwloc_ibv_get_device_cpuset\fP (\fBhwloc_topology_t\fP topology , struct ibv_device *ibdev, \fBhwloc_cpuset_t\fP set)"
.br
.ti -1c
.RI "static inline \fBhwloc_obj_t\fP \fBhwloc_ibv_get_device_osdev_by_name\fP (\fBhwloc_topology_t\fP topology, const char *ibname)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Function Documentation"
.PP 
.SS "static inline int hwloc_ibv_get_device_cpuset (\fBhwloc_topology_t\fP topology, struct ibv_device *ibdev, \fBhwloc_cpuset_t\fPset)\fC [static]\fP"

.PP
Get the CPU set of logical processors that are physically close to device \fCibdev\fP\&. For the given OpenFabrics device \fCibdev\fP, read the corresponding kernel-provided cpumap file and return the corresponding CPU set\&. This function is currently only implemented in a meaningful way for Linux; other systems will simply get a full cpuset\&.
.PP
Topology \fCtopology\fP must match the current machine\&. 
.SS "static inline \fBhwloc_obj_t\fP hwloc_ibv_get_device_osdev_by_name (\fBhwloc_topology_t\fPtopology, const char *ibname)\fC [static]\fP"

.PP
Get the hwloc OS device object corresponding to the OpenFabrics device named \fCibname\fP\&. For the OpenFabrics device whose name is \fCibname\fP, return the hwloc OS device object describing the device\&. Returns NULL if there is none\&.
.PP
The name \fCibname\fP is usually obtained from ibv_get_device_name()\&.
.PP
IO devices detection must be enabled in topology \fCtopology\fP\&.
.PP
The topology does not necessary have to match the current machine\&. For instance the topology may be an XML import of a remote host\&.
.PP
\fBNote:\fP
.RS 4
The corresponding PCI device object can be obtained by looking at the OS device parent object\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Hardware Locality (hwloc) from the source code\&.
